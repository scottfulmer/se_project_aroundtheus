(()=>{"use strict";const e=class{constructor(e,t){this._settings=e,this._inputSelector=e.inputSelector,this._submitButton=e.submitButton,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput(this._inputElements)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButton),this._toggleButtonState(this._inputElements,this._submitButton,this._inputSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputElements,this._submitButton,this._inputSelector)}))}))}resetValidation(){this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e){e.classList.add("modal_opened"),document.addEventListener("keyup",r),e.addEventListener("mousedown",i)}function n(e){e.classList.remove("modal_opened"),document.removeEventListener("keyup",r),e.removeEventListener("mousedown",i)}function r(e){"Escape"===e.key&&n(document.querySelector(".modal_opened"))}function i(e){e.target===e.currentTarget&&n(e.target)}const o=document.querySelector("#preview-image-modal"),s=document.querySelector(".modal__preview-image"),a=document.querySelector(".modal__footer");document.querySelector(".card__image");const l=document.querySelector("#add-card-modal"),c=document.querySelector("#profile-edit-button"),u=l.querySelector("#card__close-modal"),d=document.querySelector(".profile__add-button"),_=document.querySelector(".profile__title"),m=document.querySelector(".profile__description"),p=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-description-input"),v=document.querySelector("#preview-image-modal"),y=(document.querySelector(".modal__preview-image"),document.querySelector(".modal__footer"),document.querySelector("#preview-close-button")),S=document.querySelector("#profile-edit-modal"),g=S.querySelector("#profile-edit-close"),q=S.querySelector(".modal__form"),f=l.querySelector("#add-card-form"),E=document.querySelector(".cards__list"),L=(document.querySelector("#card-template").content.firstElementChild,f.querySelector(".modal__input-type-title")),w=f.querySelector(".modal__input-type-url");function k(){n(S)}const b=(e,n)=>{const r=new class{constructor(e,t){this._name=e.name,this._link=e.link,this._cardSelector=t}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._element.querySelector(".card__delete-button").addEventListener("click",this._handleDeleteCard),this._element.querySelector(".card__image").addEventListener("click",this._handlePreviewPicture)}_handleLikeIcon(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard=()=>{this._element.remove(),this._element=null};_handlePreviewPicture=()=>{s.src=this._link,a.textContent=this._name,s.alt=this._name,t(o)};getView(){return this._element=this._getTemplate(),this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._alt,this._setEventListeners(),this._element}}(e,"#card-template");n.prepend(r.getView())},C={inputSelector:".modal__form-input",submitButton:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},B=new e(C,q),j=new e(C,f);B.enableValidation(),j.enableValidation(),c.addEventListener("click",(()=>{p.value=_.textContent,h.value=m.textContent,t(S)})),f.addEventListener("submit",(function(e){e.preventDefault();const t=L.value,r=w.value;f.querySelector(".modal__button"),b({name:t,link:r},E),L.value="",w.value="",j.resetValidation(),n(l)})),d.addEventListener("click",(()=>t(l))),u.addEventListener("click",(()=>n(l))),g.addEventListener("click",k),q.addEventListener("submit",(function(e){e.preventDefault(),_.textContent=p.value,m.textContent=h.value,k()})),y.addEventListener("click",(()=>n(v))),[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}].forEach((e=>b(e,E)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,